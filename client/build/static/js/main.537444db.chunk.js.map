{"version":3,"sources":["config.js","actions/utils.js","local-storage.js","actions/auth.js","actions/index.js","components/wordCard.js","components/languageSelector.js","components/dashboard.js","components/requires-login.js","components/header-bar.js","components/scores.js","components/input.js","validators.js","components/login-form.js","components/landing-page.js","components/registration-form.js","actions/users.js","components/registration-page.js","components/app.js","reducers/auth.js","actions/protected-data.js","reducers/protected-data.js","reducers/mainReducer.js","store.js","index.js"],"names":["API_BASE_URL","process","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","clearAuthToken","localStorage","removeItem","e","SET_AUTH_TOKEN","setAuthToken","authToken","type","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","error","storeAuthInfo","dispatch","currentUser","decodedToken","jwtDecode","user","setItem","saveAuthToken","login","username","password","fetch","concat","method","Content-Type","body","JSON","stringify","_ref","catch","SubmissionError","_error","refreshAuthToken","getState","auth","Authorization","_ref2","setAnswer","userInput","stageNewSubject","subjectId","setCurrentSubject","subject","resetAnswerStatus","evaluateAnswerError","evaluateAnswer","userAnswerObject","correctAnswer","correct","revealAnswer","getAvailableSubjects","subjects","getAvailableSubjectsSuccess","getQuestion","question","getQuestionSuccess","getQuestionError","newSubjectList","availableSubject","id","userSubjects","updateUserSubjectsSuccess","updateUserSubjectsError","newSubjectListError","Card","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","buildAndDispatchEvalObject","userAnswer","wordWithAnswer","assign","props","word","currentSubject","handleChange","value","handleClick","preventDefault","answer","handleNext","inherits","createClass","key","feedback","submitButton","nextButton","disabled","_this2","nativeLanguage","react_default","a","createElement","onClick","className","foreignLanguage","style","backgroundColor","bgc","onSubmit","name","placeholder","onChange","target","mValue","React","Component","connect","state","main","streak","currentWord","LanguageSelector","stagedSubject","subjectOnUser","find","availableSubjects","options","loading","map","index","label","stageSubject","Dashboard","getUserSubjectsSuccess","getUserSubjectsError","logOutButton","subjectSelector","information","loggedIn","logOut","languageSelector","wordCard","react_router_dom","to","requiresLogin","RequiresLogin","authenticating","passThroughProps","objectWithoutProperties","react_router","displayName","fullname","HeaderBar","role","charAt","toUpperCase","slice","ScorePage","scores","getScoresSuccess","getScoresError","list","score","Input","prevProps","meta","active","input","focus","warning","Element","element","touched","htmlFor","ref","children","required","undefined","nonEmpty","trim","isTrimmed","LoginForm","values","aria-live","handleSubmit","Field","component","validate","pristine","submitting","reduxForm","form","onSubmitFail","errors","field","login_form","passwordLength","min","max","matchesPassword","allValues","RegistrationForm","content-type","reason","location","defineProperty","registerUser","errorMessage","unshift","keys","RegistrationPage","registration_form","App","startPeriodicRefresh","stopPeriodicRefresh","refreshInterval","setInterval","clearInterval","header_bar","exact","path","LandingPage","withRouter","hasAuthToken","initialState","FETCH_PROTECTED_DATA_SUCCESS","FETCH_PROTECTED_DATA_ERROR","data","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","formReducer","action","protectedData","toConsumableArray","applyMiddleware","thunk","getItem","token","ReactDOM","render","es","app","document","getElementById"],"mappings":"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","file":"static/js/main.537444db.chunk.js","sourcesContent":["export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL //|| 'http://localhost:8080/api';\n// export const API_BASE_URL =  'http://localhost:8080/api';","// Boilerplate code for handling errors from the API.  If the error response\n// contains JSON then we return a rejected promise containing the decoded\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\n// containing the status text.  If there is no error then we continue with\n// the promise chain.\nexport const normalizeResponseErrors = res => {\n    if (!res.ok) {\n        if (\n            res.headers.has('content-type') &&\n            res.headers.get('content-type').startsWith('application/json')\n        ) {\n            // It's a nice JSON error returned by us, so decode it\n            return res.json().then(err => Promise.reject(err));\n        }\n        // It's a less informative error returned by express\n        return Promise.reject({\n            code: res.status,\n            message: res.statusText\n        });\n    }\n    return res;\n};\n","export const loadAuthToken = () => {\n    return localStorage.getItem('authToken');\n};\n\nexport const saveAuthToken = authToken => {\n    try {\n        localStorage.setItem('authToken', authToken);\n    } catch (e) {}\n};\n\nexport const clearAuthToken = () => {\n    try {\n        localStorage.removeItem('authToken');\n    } catch (e) {}\n};\n","import jwtDecode from 'jwt-decode';\nimport { SubmissionError } from 'redux-form';\n\nimport { API_BASE_URL } from '../config';\n\nimport { normalizeResponseErrors } from './utils';\nimport { saveAuthToken, clearAuthToken } from '../local-storage';\n\n\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport const setAuthToken = authToken => ({\n  type: SET_AUTH_TOKEN,\n  authToken\n});\n\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\nexport const clearAuth = () => ({\n  type: CLEAR_AUTH\n});\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const authRequest = () => ({\n  type: AUTH_REQUEST\n});\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const authSuccess = currentUser => ({\n  type: AUTH_SUCCESS,\n  currentUser\n});\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const authError = error => ({\n  type: AUTH_ERROR,\n  error\n});\n\n\n\n// Stores the auth token in state and localStorage, and decodes and stores\n// the user data stored in the token\nconst storeAuthInfo = (authToken, dispatch) => {\n  const decodedToken = jwtDecode(authToken);\n  dispatch(setAuthToken(authToken));\n  dispatch(authSuccess(decodedToken.user));\n  saveAuthToken(authToken);\n  return decodedToken;\n};\n\nexport const login = (username, password) => dispatch => {\n  dispatch(authRequest());\n  return (\n    fetch(`${API_BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n      // Reject any requests which don't return a 200 status, creating\n      // errors which follow a consistent format\n      .then(res => normalizeResponseErrors(res))\n      .then(res => res.json())\n      .then(({ authToken }) => {\n       return storeAuthInfo(authToken, dispatch)\n      })\n      .catch(err => {\n        const { code } = err;\n        const message =\n          code === 401\n            ? 'Incorrect username or password'\n            : 'Unable to login, please try again';\n        dispatch(authError(err));\n        // Could not authenticate, so return a SubmissionError for Redux\n        // Form\n        return Promise.reject(\n          new SubmissionError({\n            _error: message\n          })\n        );\n      })\n  );\n};\n\nexport const refreshAuthToken = () => (dispatch, getState) => {\n  dispatch(authRequest());\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/refresh`, {\n    method: 'POST',\n    headers: {\n      // Provide our existing token as credentials to get a new one\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(({ authToken }) => storeAuthInfo(authToken, dispatch))\n    .catch(err => {\n      // We couldn't get a refresh token because our current credentials\n      // are invalid or expired, or something else went wrong, so clear\n      // them and sign us out\n      dispatch(authError(err));\n      dispatch(clearAuth());\n      clearAuthToken(authToken);\n    });\n};\n","import { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\n\n\nexport const SET_ANSWER = 'SET_ANSWER';\nexport const setAnswer = userInput => ({\n  type: SET_ANSWER,\n  userInput\n});\n\nexport const STAGE_NEW_SUBJECT = 'STAGE_NEW_SUBJECT';\nexport const stageNewSubject = (subjectId) => ({\n  type: STAGE_NEW_SUBJECT,\n  subjectId\n})\n\nexport const SET_CURRENT_SUBJECT = 'SET_CURRENT_SUBJECT';\nexport const setCurrentSubject = (subject) => ({\n  type: SET_CURRENT_SUBJECT,\n  subject\n})\n\nexport const GET_AVAILABLE_SUBJECTS_SUCCESS = 'GET_AVAILABLE_SUBJECTS_SUCCESS';\nexport const getAvailableSubjectsSuccess = subjects => ({\n  type: GET_AVAILABLE_SUBJECTS_SUCCESS,\n  subjects\n})\n\nexport const GET_QUESTION_SUCCESS = 'GET_QUESTION_SUCCESS';\nexport const getQuestionSuccess = question => ({\n  type: GET_QUESTION_SUCCESS,\n  question\n})\n\nexport const RESET_ANSWER_STATUS = 'RESET_ANSWER_STATUS';\nexport const resetAnswerStatus = () => ({\n  type: RESET_ANSWER_STATUS\n});\n\nexport const REVEAL_ANSWER = 'REVEAL_ANSWER';\nexport const revealAnswer = correctAnswer => ({\n  type: REVEAL_ANSWER,\n  correctAnswer\n})\n\nexport const HANDLE_STREAK_CORRECT = 'HANDLE_STREAK_CORRECT';\nexport const handleStreakCorrect = () => ({\n  type: HANDLE_STREAK_CORRECT,\n})\n\nexport const HANDLE_STREAK_INCORRECT = 'HANDLE_STREAK_INCORRECT';\nexport const handleStreakIncorrext = () => ({\n  type: HANDLE_STREAK_INCORRECT,\n})\n\nexport const GET_SCORES_SUCCESS = 'GET_SCORES_SUCCESS';\nexport const getScoresSuccess = (scores) => ({\n  type: GET_SCORES_SUCCESS,\n  scores\n})\n\nexport const UPDATE_USER_SUBJECTS_SUCCESS = 'UPDATE_USER_SUBJECTS_SUCCESS';\nexport const updateUserSubjectsSuccess = (userSubjects) => ({\n  type: UPDATE_USER_SUBJECTS_SUCCESS,\n  userSubjects\n})\n\nexport const EVALUATE_ANSWER_REQUEST = 'EVALUATE_ANSWER_REQUEST'\nexport const evaluateAnswerRequest = () => ({\n  type: EVALUATE_ANSWER_REQUEST\n})\n\nexport const EVALUATE_ANSWER_ERROR = 'EVALUATE_ANSWER_ERROR'\nexport const evaluateAnswerError = (error) => ({\n  type: EVALUATE_ANSWER_ERROR,\n  error\n})\nexport const GET_AVAILABLE_SUBJECTS_REQUEST = 'GET_AVAILABLE_SUBJECTS_REQUEST';\nexport const getAvailableSubjectsRequest = () => ({\n  type: GET_AVAILABLE_SUBJECTS_REQUEST\n})\nexport const GET_AVAILABLE_SUBJECTS_ERROR = 'GET_AVAILABLE_SUBJECTS_ERROR';\nexport const getAvailableSubjectsError = (error) => ({\n  type: GET_AVAILABLE_SUBJECTS_ERROR,\n  error\n})\nexport const GET_QUESTION_REQUEST = 'GET_QUESTION_REQUEST';\nexport const getQuestionRequest = () => ({\n  type: GET_QUESTION_REQUEST\n})\nexport const GET_QUESTION_ERROR = 'GET_QUESTION_ERROR';\nexport const getQuestionError = (error) => ({\n  type: GET_QUESTION_ERROR,\n  error\n})\nexport const NEXT_QUESTION_REQUEST = 'NEXT_QUESTION_REQUEST';\nexport const nextQuestionRequest = () => ({\n  type: NEXT_QUESTION_REQUEST\n})\nexport const NEXT_QUESTION_ERROR = 'NEXT_QUESTION_ERROR';\nexport const nextQuestionError = (error) => ({\n  type: NEXT_QUESTION_ERROR,\n  error\n})\nexport const GET_SCORES_REQUEST = 'GET_SCORES_REQUEST';\nexport const getScoresRequest = () => ({\n  type: GET_SCORES_REQUEST\n})\nexport const GET_SCORES_ERROR = 'GET_SCORES_ERROR';\nexport const getScoresError = (error) => ({\n  type: GET_SCORES_ERROR,\n  error\n})\nexport const UPDATE_USER_SUBJECTS_REQUEST = 'UPDATE_USER_SUBJECTS_REQUEST'\nexport const updateUserSubjectsRequest = () => ({\n  type: UPDATE_USER_SUBJECTS_REQUEST\n})\nexport const UPDATE_USER_SUBJECTS_ERROR = 'UPDATE_USER_SUBJECTS_ERROR'\nexport const updateUserSubjectsError = (error) => ({\n  type: UPDATE_USER_SUBJECTS_ERROR,\n  error\n})\nexport const NEW_SUBJECT_LIST_REQUEST = 'NEW_SUBJECT_LIST_REQUEST'\nexport const newSubjectListRequest = () => ({\n  type: NEW_SUBJECT_LIST_REQUEST\n})\nexport const NEW_SUBJECT_LIST_ERROR = 'NEW_SUBJECT_LIST_ERROR'\nexport const newSubjectListError = (error) => ({\n  type: NEW_SUBJECT_LIST_ERROR,\n  error\n})\n\nexport const GET_USER_SUBJECTS_SUCCESS = 'GET_USER_SUBJECTS_SUCCESS';\nexport const getUserSubjectsSuccess = (userSubjects) => ({\n  type: GET_USER_SUBJECTS_SUCCESS,\n  userSubjects\n})\n\nexport const GET_USER_SUBJECTS_REQUEST = 'GET_USER_SUBJECTS_REQUEST'\nexport const getUserSubjectsRequest = () => ({\n  type: GET_USER_SUBJECTS_REQUEST\n})\nexport const GET_USER_SUBJECTS_ERROR = 'GET_USER_SUBJECTS_ERROR'\nexport const getUserSubjectsError = (error) => ({\n  type: GET_USER_SUBJECTS_ERROR,\n  error\n})\n\n\nexport const EVALUATE_ANSWER = 'EVALUATE_ANSWER';\nexport const evaluateAnswer = (userAnswerObject) => (dispatch, getState) => {\n  dispatch(evaluateAnswerRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/learn`, {\n    method: 'POST',\n    body: JSON.stringify(userAnswerObject),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${authToken}`\n    }\n  }).then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(correctAnswer => {\n      if (correctAnswer.correct) {\n        dispatch(handleStreakCorrect())\n      } else {\n        dispatch(handleStreakIncorrext())\n      }\n      return dispatch(revealAnswer(correctAnswer))\n    }).catch(error => {\n      return dispatch(evaluateAnswerError(error))\n    })\n}\n\nexport const getAvailableSubjects = () => (dispatch, getState) => {\n  dispatch(evaluateAnswerRequest())\n  // const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/subjects`, {\n    // headers: {\n    //   Authorization: `Bearer ${authToken}`\n    // }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(subjects => {\n      dispatch(getAvailableSubjectsSuccess(subjects));\n    })\n    .catch(error => dispatch(evaluateAnswerError(error)))\n}\n\nexport const getQuestion = (subjectId) => (dispatch, getState) => {\n  dispatch(getQuestionRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/learn/${subjectId}`, {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(question => {\n      dispatch(getQuestionSuccess(question));\n    })\n    .catch(error => dispatch(getQuestionError(error)))\n}\n\nexport const nextQuestion = (foreignLanguage, correct) => (dispatch, getState) => {\n  dispatch(nextQuestionRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/learn`, {\n    method: 'POST',\n    body: JSON.stringify({ foreignLanguage: foreignLanguage, correct: correct }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(() => dispatch(getQuestion()))\n    .catch(error => dispatch(nextQuestionError(error)))\n}\n\n\n\nexport const getScores = (subjectId) => (dispatch, getState) => {\n  dispatch(getScoresRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/score/${subjectId}`, {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(scores => {\n      dispatch(getScoresSuccess(scores));\n    })\n    .catch(error => dispatch(getScoresError(error)))\n};\n\nexport const updateUserSubjects = () => (dispatch, getState) => {\n  dispatch(updateUserSubjectsRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/subjects/userSubjects`, {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then((userSubjects) => {\n      return dispatch(updateUserSubjectsSuccess(userSubjects));\n    }).catch((error) => dispatch(updateUserSubjectsError(error)))\n};\n\n\n// TODO, request most recently modified list instead of first in subjects array.\n// current subject set in auth action success\nexport const getUserSubjects = () => (dispatch, getState) => {\n  dispatch(getUserSubjectsRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/subjects/userSubjects`, {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then((userSubjects) => {\n      dispatch(getUserSubjectsSuccess(userSubjects));\n      dispatch(setCurrentSubject(userSubjects[0]))\n      return dispatch(getQuestion(userSubjects[0].id))\n    }).catch((error) => dispatch(getUserSubjectsError(error)))\n};\n\n\nexport const newSubjectList = (availableSubject) => (dispatch, getState) => {\n  dispatch(newSubjectListRequest())\n  let subjectId = availableSubject.id\n\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/subjects/${subjectId}`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(() => {\n      dispatch(updateUserSubjects());\n      dispatch(setCurrentSubject(availableSubject))\n      return dispatch(getQuestion(subjectId));\n    }).catch((error) => dispatch(newSubjectListError(error)))\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n\tsetAnswer,\n\tevaluateAnswer,\n\tresetAnswerStatus,\n\tgetQuestion\n} from '../actions/index'\n\nexport class Card extends React.Component {\n\n\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(resetAnswerStatus())\n\t}\n\n\tbuildAndDispatchEvalObject = (userAnswer) => {\n\t\tconst wordWithAnswer = Object.assign({}, this.props.word, {\n\t\t\tuserAnswer,\n\t\t\tsubjectId: this.props.currentSubject.id\n\t\t})\n\t\tthis.props.dispatch(evaluateAnswer(wordWithAnswer))\n\t}\n\n\thandleChange = (value) => {\n\t\tthis.props.dispatch(setAnswer(value))\n\t}\n\n\thandleClick = (e) => {\n\t\te.preventDefault()\n\t\t//TODO change answer to userAnswer\n\t\tthis.buildAndDispatchEvalObject(this.props.answer)\n\t}\n\n\thandleNext = () => {\n\t\tthis.props.dispatch(resetAnswerStatus());\n\t\tthis.props.dispatch(getQuestion(this.props.currentSubject.id));\n\t}\n\n\n\n\trender() {\n\t\tlet feedback;\n\t\tif (this.props.correctAnswer) {\n\t\t\tif (this.props.correctAnswer.correct === true) {\n\t\t\t\tfeedback = 'You got it Right!'\n\t\t\t} else if (this.props.correctAnswer.correct === false) {\n\t\t\t\tfeedback = `Wrong! The answer is ${this.props.correctAnswer.nativeLanguage}`\n\t\t\t};\n\t\t}\n\t\tlet submitButton;\n\t\tlet nextButton;\n\t\tlet disabled;\n\t\tif (this.props.correctAnswer) {\n\t\t\tnextButton = <button type='button' onClick={() => this.handleNext()}>Get Another!</button>\n\t\t\tdisabled = true\n\t\t}\n\t\telse {\n\t\t\tsubmitButton = <button\n\t\t\t\tclassName='submit-button'\n\t\t\t\ttype=\"submit\"\n\t\t\t>\n\t\t\t\tSubmit Guess\n</button>\n\t\t\tdisabled = false\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className='game-container'>\n\t\t\t\t\t<h2>{this.props.word.foreignLanguage}</h2>\n\t\t\t\t\t<div className=\"line\" style={{ backgroundColor: this.props.bgc }}></div>\n\t\t\t\t\t<p className='card-text'></p>\n\t\t\t\t\t<form onSubmit={(e) => this.handleClick(e)}>\n\t\t\t\t\t\t<input className='user-input'\n\t\t\t\t\t\t\tname='text'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={this.props.answer}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\tplaceholder='answer'\n\t\t\t\t\t\t\tonChange={e => this.handleChange(e.target.value)}>\n\t\t\t\t\t\t</input>\n\t\t\t\t\t\t{submitButton}\n\t\t\t\t\t</form>\n\t\t\t\t\t{nextButton}\n\t\t\t\t\t<p>{feedback}</p>\n\t\t\t\t</div>\n\t\t\t\t<p className='word-score'>Word Score: {this.props.word.mValue}</p>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\tanswer: state.main.answer,\n\tstreak: state.main.streak,\n\tfeedback: state.main.feedback,\n\tword: state.main.currentWord,\n\tcorrectAnswer: state.main.correctAnswer,\n\tsubjects: state.auth.currentUser.subjects,\n\tcurrentSubject: state.main.currentSubject\n});\n\nexport default connect(mapStateToProps)(Card);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  setCurrentSubject,\n  newSubjectList,\n  getQuestion,\n  stageNewSubject\n} from '../actions/index'\n\nexport class LanguageSelector extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(stageNewSubject(this.props.currentSubject.id))\n  }\n  stageSubject(subjectId) {\n    this.props.dispatch(stageNewSubject(subjectId))\n  }\n\n  setCurrentSubject() {\n    const subjectId = this.props.stagedSubject;\n    // check if user already has a list on this subject\n    const subjectOnUser = this.props.userSubjects.find(subject => {\n      return subject.id === subjectId;\n    })\n    if (!subjectOnUser) {\n      const availableSubject = this.props.availableSubjects.find(subject => {\n        return subject.id === subjectId;\n      })\n      //create new list for user\n      this.props.dispatch(newSubjectList(availableSubject))\n    } else {\n      // set the current subject\n      this.props.dispatch(setCurrentSubject(subjectOnUser))\n      this.props.dispatch(getQuestion(subjectId))\n    }\n  }\n\n  render() {\n    let options;\n    if (this.props.loading) {\n      options =\n        <option>\n          'loading'\n      </option>\n\n    }\n    else {\n      options = this.props.availableSubjects.map((subject, index) =>\n        <option\n          key={index}\n          label={subject.subject}\n          value={subject.id}>\n          {subject.subject}\n        </option>);\n    }\n    return (\n      <div>\n        <label className='select-label'>Select a subject to learn</label>\n        <select className=\"select-subject\"\n          name=\"subjectSelect\"\n          value={this.props.stagedSubject}\n          options={options}\n          onChange={e => this.stageSubject(e.target.value)}>{options}\n        </select>\n        <button className='select-button' type='button' onClick={() => this.setCurrentSubject()}>Switch Subject</button>\n      </div>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = state => ({\n  loading: state.main.loading,\n  availableSubjects: state.main.availableSubjects,\n  currentSubject: state.main.currentSubject,\n  currentUser: state.auth.currentUser,\n  userSubjects: state.main.userSubjects,\n  stagedSubject: state.main.stagedSubject\n});\n\nexport default connect(mapStateToProps)(LanguageSelector);","import React from 'react';\nimport { connect } from 'react-redux';\nimport requiresLogin from './requires-login';\nimport { clearAuth } from '../actions/auth';\nimport { clearAuthToken } from '../local-storage';\nimport Card from './wordCard';\nimport LanguageSelector from './languageSelector';\nimport { Link } from 'react-router-dom';\nimport {  getAvailableSubjects,  getUserSubjects } from '../actions/index'\n\nexport class Dashboard extends React.Component {\n\n\n  componentDidMount() {\n    this.props.dispatch(getAvailableSubjects())\n    if (!this.props.userSubjects.length) {\n      return this.props.dispatch(getUserSubjects())\n    }\n  }\n\n  logOut() {\n    this.props.dispatch(clearAuth());\n    clearAuthToken();\n  }\n  render() {\n\n    let logOutButton;\n    if (this.props.loggedIn) {\n      logOutButton = (\n        <button type='button' onClick={() => this.logOut()}>Log out</button>\n      );\n    }\n    let subjectSelector;\n    if (this.props.currentSubject && this.props.availableSubjects) {\n      subjectSelector = <LanguageSelector />\n    }\n\n    let information;\n    if (this.props.error) {\n      information = <div>\n        <h3>{this.props.error.message}</h3>\n      </div>\n    }\n    else{\n      information = <h3>Streak : {this.props.streak}</h3>\n  \n    }\n    return (\n      <div className='dashboard'>\n        <div className=\"dashboard-username-main\">\n          <h2 className='dashboard-welcome'>Welcome {this.props.currentUser.username}!</h2>\n         {information}\n        </div>\n        <Card bgc='#fcd000' />\n        {logOutButton}\n        <Link to='/scores'>\n          <button type='button'>View Scores</button>\n        </Link>\n        {subjectSelector}\n      </div>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.auth;\n  return {\n    error: state.main.error,\n    loading: state.main.loading,\n    streak: state.main.streak,\n    currentUser: state.auth.currentUser,\n    name: `${currentUser.fullname}`,\n    loggedIn: state.auth.currentUser !== null,\n    currentSubject: state.main.currentSubject,\n    availableSubjects: state.main.availableSubjects,\n    userSubjects: state.main.userSubjects\n  };\n};\n\nexport default requiresLogin()(connect(mapStateToProps)(Dashboard));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nexport default () => Component => {\n    function RequiresLogin(props) {\n        const { authenticating, loggedIn, error, ...passThroughProps } = props;\n        if (authenticating) {\n            return <div>Logging in...</div>;\n        } else if (!loggedIn || error) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return <Component {...passThroughProps} />;\n    }\n\n    const displayName = Component.displayName || Component.name || 'Component';\n    RequiresLogin.displayName = `RequiresLogin(${displayName})`;\n\n    const mapStateToProps = (state, props) => ({\n        authenticating: state.auth.loading,\n        loggedIn: state.auth.currentUser !== null,\n        error: state.auth.error\n    });\n\n    return connect(mapStateToProps)(RequiresLogin);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clearAuth } from '../actions/auth';\nimport { clearAuthToken } from '../local-storage';\n\nexport class HeaderBar extends React.Component {\n  logOut() {\n    this.props.dispatch(clearAuth());\n    clearAuthToken();\n  }\n\n  render() {\n    if (!this.props.loggedIn) {\n      return (<header role='banner' className=\"header-bar\">\n        <h1 className='title'>Friday Night Knowledge</h1>\n      </header>\n      );\n    }\n    if (this.props.currentSubject) {\n      let subject = this.props.currentSubject.subject.charAt(0).toUpperCase() + this.props.currentSubject.subject.slice(1)\n        return (\n          <header role='banner' className=\"header-bar\">\n            <h1 className='title'>{subject} for Friday Night</h1>\n          </header>\n        );\n      }\n    else {\n      return <h1 className='title'>Loading</h1>\n    }\n\n  }\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.auth.currentUser !== null,\n  currentSubject: state.main.currentSubject,\n  loading: state.main.loading\n});\n\nexport default connect(mapStateToProps)(HeaderBar);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getScores } from '../actions/index'\nexport class ScorePage extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch(getScores(this.props.currentSubject.id))\n  }\n\n  render() {\n    let list = this.props.scores.map((score) => {\n      return <li className='score-item'>{score.foreignLanguage} <span>{score.mValue}</span> </li>\n    })\n\n    return (\n      <div className=\"dashboard scores\">\n        <div className=\"dashboard-username\">\n          <h2 className='dashboard-welcome'>\n            Welcome {this.props.username}!\n          </h2>\n          <h3>Word Score</h3>\n        </div>\n        <ul className='score-list'>{list}</ul>\n        <Link to='/dashboard'>\n          <button type='button'>Back to dashboard</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    main: state.main,\n    username: state.auth.currentUser.username,\n    scores: state.main.scores,\n    currentSubject: state.main.currentSubject\n  };\n};\n\nexport default connect(mapStateToProps)(ScorePage);","import React from 'react';\n\nexport default class Input extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.meta.active && this.props.meta.active) {\n            this.input.focus();\n        }\n    }\n\n    render() {\n        const Element = this.props.element || 'input';\n        let error;\n        if (this.props.meta.touched && this.props.meta.error) {\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\n        }\n\n        let warning;\n        if (this.props.meta.touched && this.props.meta.warning) {\n            warning = (\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\n            );\n        }\n\n        return (\n            <div className=\"form-input\">\n                <label htmlFor={this.props.input.name}>\n                    {this.props.label}\n                    {error}\n                    {warning}\n                </label>\n                <Element className=\"select-subject\"\n                    {...this.props.input}\n                    id={this.props.input.name}\n                    type={this.props.type}\n                    ref={input => (this.input = input)}\n                >\n                    {this.props.children}\n                </Element>\n\n            </div>\n        );\n    }\n}\n","export const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n    value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n    if (length.min && value.length < length.min) {\n        return `Must be at least ${length.min} characters long`;\n    }\n    if (length.max && value.length > length.max) {\n        return `Must be at most ${length.max} characters long`;\n    }\n};\nexport const matches = field => (value, allValues) =>\n    field in allValues && value.trim() === allValues[field].trim()\n        ? undefined\n        : 'Does not match';\n","import React from 'react';\nimport { Field, reduxForm, focus } from 'redux-form';\nimport Input from './input';\nimport { login } from '../actions/auth';\nimport { required, nonEmpty } from '../validators';\n\nexport class LoginForm extends React.Component {\n    onSubmit(values) {\n        return this.props.dispatch(login(values.username, values.password));\n    }\n\n    render() {\n        let error;\n        if (this.props.error) {\n            error = (\n                <div className=\"form-error\" aria-live=\"polite\">\n                    {this.props.error}\n                </div>\n            );\n        }\n        return (\n            <form\n                className=\"login-form\"\n                onSubmit={this.props.handleSubmit(values =>\n                    this.onSubmit(values)\n                )}>\n                {error}\n                <label htmlFor=\"username\">Username</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    validate={[required, nonEmpty]}\n                />\n                <button disabled={this.props.pristine || this.props.submitting}>\n                    Log in\n                </button>\n                <p className='login-example'>Example Account:</p>\n                <p>U: testAccount</p>\n                <p>P: vocabularytime</p>\n            </form>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'login',\n    onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\n})(LoginForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport LoginForm from './login-form';\n\n\nexport function LandingPage(props) {\n    // If we are logged in redirect straight to the user's dashboard\n    if (props.loggedIn) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n    return (\n        <div>\n            <div className=\"home\">\n                <p className='description'>Friday night knowledge will teach \n             teach you good words to know in multiple languages when you are at the bar.\n            </p>\n                <LoginForm />\n                <Link to=\"/register\">Register</Link>\n            </div>\n\n            {/* <div><TestDashboard /></div> */}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(LandingPage);\n","import React from 'react';\nimport { Field, reduxForm, focus } from 'redux-form';\nimport { registerUser } from '../actions/users';\nimport Input from './input';\nimport { connect } from 'react-redux'\nimport { required, nonEmpty, matches, length, isTrimmed } from '../validators';\nimport { getAvailableSubjects } from '../actions';\nconst passwordLength = length({ min: 10, max: 72 });\nconst matchesPassword = matches('password');\n\nexport class RegistrationForm extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch(getAvailableSubjects())\n  }\n\n\n  onSubmit(values) {\n\n    const { username, password, fullname, subjectId } = values;\n    const user = { username, password, fullname, subjectId };\n    return this.props\n      .dispatch(registerUser(user))\n      \n  }\ns\n  render() {\n    let errorMessage;\n    if (this.props.errorMessage) {\n      errorMessage = (<div><p className='form-error'>{this.props.errorMessage.message}</p></div>)\n    }\n    let options;\n    if (this.props.loading) {\n      options =\n        <option>\n          loading\n      </option>\n    }\n    if (this.props.availableSubjects.length) {\n      options = this.props.availableSubjects.map((subject, index) =>\n        <option\n          key={index + 1}\n          label={subject.subject}\n          value={subject.id}>\n          {subject.subject}\n        </option>);\n      options.unshift(<option key={0}\n      >\n        pick one\n        </option>)\n\n    }\n    return (\n      <form\n        className=\"login-form\"\n        onSubmit={this.props.handleSubmit(values =>\n          this.onSubmit(values)\n        )}>\n        {errorMessage}\n        <label htmlFor=\"fullname\">Full Name</label>\n        <Field component={Input} type=\"text\" name=\"fullname\" />\n        <label htmlFor=\"username\">Username</label>\n        <Field\n          component={Input}\n          type=\"text\"\n          name=\"username\"\n          validate={[required, nonEmpty, isTrimmed]}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"password\"\n          validate={[required, passwordLength, isTrimmed]}\n        />\n        <label htmlFor=\"passwordConfirm\">Confirm password</label>\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"passwordConfirm\"\n          validate={[required, nonEmpty, matchesPassword]}\n        />\n\n        <label className='select-label'>Select your first subject</label>\n        <Field\n          component={Input}\n          element='select'\n          className=\"select-subject\"\n          name=\"subjectId\"\n          type='select'\n          value={options}\n          options={options}\n          validate={[required]}\n        >{options}</Field>\n        < button\n          type=\"submit\"\n          disabled={this.props.pristine || this.props.submitting} >\n          Register\n                </button >\n      </form >\n    )\n  };\n};\n\nconst mapStateToProps = state => ({\n  loading: state.main.loading,\n  availableSubjects: state.main.availableSubjects,\n  errorMessage: state.main.error\n});\n\n\nexport default connect(mapStateToProps)(reduxForm({\n  form: 'registration',\n  onSubmitFail: (errors, dispatch) =>\n    dispatch(focus('registration', Object.keys(errors)[0]))\n})(RegistrationForm));\n","import { SubmissionError } from 'redux-form';\n\nimport { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\nimport { login } from './auth';\n\n\n// TODO these bipass redux form and there is a better way to do this\nexport const REGISTER_USER_ERROR = 'REGISTER_USER_ERROR'\nexport const registerUserError = (error) => ({\n    type: REGISTER_USER_ERROR,\n    error\n})\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\nexport const registerUserRequest = () => ({\n    type: REGISTER_USER_REQUEST,\n\n})\n\nexport const registerUser = user => dispatch => {\n    dispatch(registerUserRequest())\n    return fetch(`${API_BASE_URL}/users`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(user)\n\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .then(() => dispatch(login(user.username, user.password)))\n        .catch(err => {\n            dispatch(registerUserError(err))\n            const { reason, message, location } = err;\n            if (reason === 'ValidationError') {\n                // Convert ValidationErrors into SubmissionErrors for Redux Form\n                return Promise.reject(\n                    new SubmissionError({\n                        [location]: message\n                    })\n                );\n            }\n        });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport RegistrationForm from './registration-form';\n\nexport class RegistrationPage extends React.Component {\n    // If we are logged in (which happens automatically when registration\n    // is successful) redirect to the user's dashboard\n    render() {\n        if (this.props.loggedIn) {\n            return <Redirect to=\"/dashboard\" />;\n        }\n        return (\n            <div className=\"home\">\n                <h2>Get started today</h2>\n                <RegistrationForm />\n                <Link to=\"/\">Login</Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser !== null,\n    availableSubjects: state.main.availableSubjects,\n});\n\nexport default connect(mapStateToProps)(RegistrationPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport Dashboard from './dashboard'\nimport HeaderBar from './header-bar';\nimport ScorePage from './scores';\nimport LandingPage from './landing-page';\nimport RegistrationPage from './registration-page';\nimport { refreshAuthToken } from '../actions/auth';\nimport './style.css'\n\nexport class App extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.loggedIn && this.props.loggedIn) {\n            // When we are logged in, refresh the auth token periodically\n            this.startPeriodicRefresh();\n        } else if (prevProps.loggedIn && !this.props.loggedIn) {\n            // Stop refreshing when we log out\n            this.stopPeriodicRefresh();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopPeriodicRefresh();\n    }\n\n    startPeriodicRefresh() {\n        this.refreshInterval = setInterval(\n            () => this.props.dispatch(refreshAuthToken()),\n            60 * 60 * 1000 // One hour\n        );\n    }\n\n    stopPeriodicRefresh() {\n        if (!this.refreshInterval) {\n            return;\n        }\n\n        clearInterval(this.refreshInterval);\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"app\">\n                    <HeaderBar />\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/dashboard\" component={Dashboard} />\n                    <Route exact path=\"/register\" component={RegistrationPage} />\n                    <Route exact path=\"/scores\" component={ScorePage} />\n                </div>\n            </main>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    hasAuthToken: state.auth.authToken !== null,\n    loggedIn: state.auth.currentUser !== null\n});\n\n// Deal with update blocking - https://reacttraining.com/react-router/web/guides/dealing-with-update-blocking\nexport default withRouter(connect(mapStateToProps)(App));\n","import {\n    SET_AUTH_TOKEN,\n    CLEAR_AUTH,\n    AUTH_REQUEST,\n    AUTH_SUCCESS,\n    AUTH_ERROR\n} from '../actions/auth';\n\nconst initialState = {\n    authToken: null, // authToken !== null does not mean it has been validated\n    currentUser: null,\n    loading: false,\n    error: null\n};\n\nexport default function reducer(state = initialState, action) {\n    if (action.type === SET_AUTH_TOKEN) {\n        return Object.assign({}, state, {\n            authToken: action.authToken\n        });\n    } else if (action.type === CLEAR_AUTH) {\n        return Object.assign({}, state, {\n            authToken: null,\n            currentUser: null\n        });\n    } else if (action.type === AUTH_REQUEST) {\n        return Object.assign({}, state, {\n            loading: true,\n            error: null\n        });\n    } else if (action.type === AUTH_SUCCESS) {\n        return Object.assign({}, state, {\n            loading: false,\n            currentUser: action.currentUser\n        });\n    } else if (action.type === AUTH_ERROR) {\n        return Object.assign({}, state, {\n            loading: false,\n            error: action.error\n        });\n    }\n    return state;\n}\n","import {API_BASE_URL} from '../config';\nimport {normalizeResponseErrors} from './utils';\n\nexport const FETCH_PROTECTED_DATA_SUCCESS = 'FETCH_PROTECTED_DATA_SUCCESS';\nexport const fetchProtectedDataSuccess = data => ({\n    type: FETCH_PROTECTED_DATA_SUCCESS,\n    data\n});\n\nexport const FETCH_PROTECTED_DATA_ERROR = 'FETCH_PROTECTED_DATA_ERROR';\nexport const fetchProtectedDataError = error => ({\n    type: FETCH_PROTECTED_DATA_ERROR,\n    error\n});\n\nexport const fetchProtectedData = () => (dispatch, getState) => {\n    const authToken = getState().auth.authToken;\n    return fetch(`${API_BASE_URL}/protected`, {\n        method: 'GET',\n        headers: {\n            // Provide our auth token as credentials\n            Authorization: `Bearer ${authToken}`\n        }\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .then(({data}) => dispatch(fetchProtectedDataSuccess(data)))\n        .catch(err => {\n            dispatch(fetchProtectedDataError(err));\n        });\n};\n","import {\n    FETCH_PROTECTED_DATA_SUCCESS,\n    FETCH_PROTECTED_DATA_ERROR\n} from '../actions/protected-data';\n\nconst initialState = {\n    data: '',\n    error: null\n};\n\nexport default function reducer(state = initialState, action) {\n    if (action.type === FETCH_PROTECTED_DATA_SUCCESS) {\n        return Object.assign({}, state, {\n            data: action.data,\n            error: null\n        });\n    } else if (action.type === FETCH_PROTECTED_DATA_ERROR) {\n        return Object.assign({}, state, {\n            error: action.error\n        });\n    }\n    return state;\n}\n","import {\n  SET_ANSWER,\n  GET_QUESTION_SUCCESS,\n  RESET_ANSWER_STATUS,\n  HANDLE_STREAK_CORRECT,\n  HANDLE_STREAK_INCORRECT,\n  GET_SCORES_SUCCESS,\n  REVEAL_ANSWER,\n  SET_CURRENT_SUBJECT,\n  GET_AVAILABLE_SUBJECTS_SUCCESS,\n  UPDATE_USER_SUBJECTS_SUCCESS,\n  EVALUATE_ANSWER_REQUEST,\n  EVALUATE_ANSWER_ERROR,\n  GET_AVAILABLE_SUBJECTS_REQUEST,\n  GET_AVAILABLE_SUBJECTS_ERROR,\n  GET_QUESTION_REQUEST,\n  GET_QUESTION_ERROR,\n  NEXT_QUESTION_REQUEST,\n  NEXT_QUESTION_ERROR,\n  GET_SCORES_REQUEST,\n  GET_SCORES_ERROR,\n  UPDATE_USER_SUBJECTS_REQUEST,\n  UPDATE_USER_SUBJECTS_ERROR,\n  NEW_SUBJECT_LIST_REQUEST,\n  NEW_SUBJECT_LIST_ERROR,\n  GET_USER_SUBJECTS_SUCCESS,\n  GET_USER_SUBJECTS_REQUEST,\n  GET_USER_SUBJECTS_ERROR,\n  STAGE_NEW_SUBJECT,\n\n} from '../actions/index.js'\n\nimport {\n  REGISTER_USER_ERROR, REGISTER_USER_REQUEST\n} from '../actions/users'\n\n\n\nconst initialState = {\n  //TODO change answer to userAnswer\n\n  answer: '',\n  correctAnswer: null,\n  currentWord: 'null',\n  streak: 0,\n  scores: [],\n  availableSubjects: [],\n  userSubjects: [],\n  currentSubject: null,\n  loading: false,\n  error: null,\n  stagedSubject: '',\n}\n\n\nexport const mainReducer = (state = initialState, action) => {\n  if (action.type === SET_ANSWER) {\n    return Object.assign({}, state, {\n      answer: action.userInput\n    })\n  }\n  else if (action.type === GET_QUESTION_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      currentWord: action.question\n    })\n  }\n\n  else if (action.type === REVEAL_ANSWER) {\n    return Object.assign({}, state, {\n      correctAnswer: action.correctAnswer,\n      answer: ''\n    })\n  }\n\n  else if (action.type === RESET_ANSWER_STATUS) {\n    return Object.assign({}, state, {\n      correctAnswer: null\n    })\n  }\n\n  else if (action.type === HANDLE_STREAK_CORRECT) {\n    return Object.assign({}, state, {\n      streak: state.streak += 1,\n      loading: false\n    })\n  }\n\n  else if (action.type === HANDLE_STREAK_INCORRECT) {\n    return Object.assign({}, state, {\n      streak: 0,\n      loading: false\n    })\n  }\n\n  else if (action.type === GET_SCORES_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      scores: [...action.scores]\n    })\n  }\n\n  else if (action.type === SET_CURRENT_SUBJECT) {\n\n    return Object.assign({}, state, {\n      currentSubject: action.subject\n    })\n\n  }\n\n  else if (action.type === GET_AVAILABLE_SUBJECTS_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      availableSubjects: action.subjects\n    })\n  }\n\n  else if (action.type === UPDATE_USER_SUBJECTS_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      userSubjects: [...action.userSubjects]\n    })\n  }\n\n\n  else if (action.type === EVALUATE_ANSWER_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === EVALUATE_ANSWER_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === GET_AVAILABLE_SUBJECTS_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === GET_AVAILABLE_SUBJECTS_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === GET_QUESTION_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === GET_QUESTION_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === NEXT_QUESTION_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === NEXT_QUESTION_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === GET_SCORES_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === GET_SCORES_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === UPDATE_USER_SUBJECTS_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === UPDATE_USER_SUBJECTS_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === NEW_SUBJECT_LIST_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === NEW_SUBJECT_LIST_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === GET_USER_SUBJECTS_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      userSubjects: [...action.userSubjects]\n    })\n  }\n  else if (action.type === GET_USER_SUBJECTS_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === GET_USER_SUBJECTS_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === STAGE_NEW_SUBJECT) {\n    return Object.assign({}, state, {\n      stagedSubject: action.subjectId\n    })\n  }\n  else if (action.type === REGISTER_USER_ERROR) {\n    return Object.assign({}, state, {\n      error: action.error\n    })\n  }\n  else if (action.type === REGISTER_USER_REQUEST) {\n    return Object.assign({}, state, {\n      error: null\n    })\n  }\n\n  return state\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport thunk from 'redux-thunk';\nimport { loadAuthToken } from './local-storage';\nimport authReducer from './reducers/auth';\nimport protectedDataReducer from './reducers/protected-data';\nimport { setAuthToken, refreshAuthToken } from './actions/auth';\nimport { mainReducer } from './reducers/mainReducer'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    combineReducers({\n        form: formReducer,\n        auth: authReducer,\n        protectedData: protectedDataReducer,\n        main: mainReducer\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n);\n\n// Hydrate the authToken from localStorage if it exist\nconst authToken = loadAuthToken();\nif (authToken) {\n    const token = authToken;\n    store.dispatch(setAuthToken(token));\n    store.dispatch(refreshAuthToken());\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './components/app';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}