{"version":3,"sources":["config.js","actions/utils.js","local-storage.js","actions/index.js","actions/auth.js","components/wordCard.js","components/languageSelector.js","components/dashboard.js","components/requires-login.js","components/header-bar.js","components/scores.js","components/input.js","validators.js","components/login-form.js","components/landing-page.js","components/registration-form.js","actions/users.js","components/registration-page.js","components/app.js","reducers/auth.js","actions/protected-data.js","reducers/protected-data.js","reducers/mainReducer.js","store.js","index.js"],"names":["API_BASE_URL","process","REACT_APP_API_BASE_URL","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","clearAuthToken","localStorage","removeItem","e","setAnswer","userInput","type","stageNewSubject","subjectId","setCurrentSubject","subject","resetAnswerStatus","evaluateAnswerError","error","evaluateAnswer","userAnswerObject","dispatch","getState","authToken","auth","fetch","concat","method","body","JSON","stringify","Content-Type","Authorization","correctAnswer","correct","revealAnswer","catch","getAvailableSubjects","subjects","getAvailableSubjectsSuccess","getQuestion","question","getQuestionSuccess","getQuestionError","newSubjectList","availableSubject","id","userSubjects","updateUserSubjectsSuccess","updateUserSubjectsError","newSubjectListError","SET_AUTH_TOKEN","setAuthToken","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","storeAuthInfo","currentUser","decodedToken","jwtDecode","user","setItem","saveAuthToken","login","username","password","_ref","SubmissionError","_error","refreshAuthToken","_ref2","Card","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","buildAndDispatchEvalObject","userAnswer","wordWithAnswer","assign","props","word","currentSubject","handleChange","value","handleClick","preventDefault","answer","handleNext","inherits","createClass","key","feedback","submitButton","nextButton","disabled","_this2","nativeLanguage","react_default","a","createElement","onClick","className","foreignLanguage","style","backgroundColor","bgc","onSubmit","name","placeholder","onChange","target","mValue","React","Component","connect","state","main","streak","currentWord","LanguageSelector","stagedSubject","subjectOnUser","find","availableSubjects","options","loading","map","index","label","stageSubject","Dashboard","getUserSubjectsSuccess","getUserSubjectsError","logOutButton","subjectSelector","information","loggedIn","logOut","languageSelector","wordCard","react_router_dom","to","requiresLogin","RequiresLogin","authenticating","passThroughProps","objectWithoutProperties","react_router","displayName","fullname","HeaderBar","role","ScorePage","scores","getScoresSuccess","getScoresError","list","score","Input","prevProps","meta","active","input","focus","warning","Element","element","touched","htmlFor","ref","children","required","undefined","nonEmpty","trim","isTrimmed","LoginForm","values","aria-live","handleSubmit","Field","component","validate","pristine","submitting","reduxForm","form","onSubmitFail","errors","field","login_form","passwordLength","min","max","matchesPassword","allValues","RegistrationForm","console","log","content-type","reason","location","defineProperty","registerUser","unshift","keys","RegistrationPage","registration_form","App","startPeriodicRefresh","stopPeriodicRefresh","refreshInterval","setInterval","clearInterval","header_bar","exact","path","LandingPage","withRouter","hasAuthToken","initialState","FETCH_PROTECTED_DATA_SUCCESS","FETCH_PROTECTED_DATA_ERROR","data","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","formReducer","action","protectedData","toConsumableArray","applyMiddleware","thunk","getItem","token","ReactDOM","render","es","app","document","getElementById"],"mappings":"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","file":"static/js/main.3675f7e9.chunk.js","sourcesContent":["export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';","// Boilerplate code for handling errors from the API.  If the error response\n// contains JSON then we return a rejected promise containing the decoded\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\n// containing the status text.  If there is no error then we continue with\n// the promise chain.\nexport const normalizeResponseErrors = res => {\n    if (!res.ok) {\n        if (\n            res.headers.has('content-type') &&\n            res.headers.get('content-type').startsWith('application/json')\n        ) {\n            // It's a nice JSON error returned by us, so decode it\n            return res.json().then(err => Promise.reject(err));\n        }\n        // It's a less informative error returned by express\n        return Promise.reject({\n            code: res.status,\n            message: res.statusText\n        });\n    }\n    return res;\n};\n","export const loadAuthToken = () => {\n    return localStorage.getItem('authToken');\n};\n\nexport const saveAuthToken = authToken => {\n    try {\n        localStorage.setItem('authToken', authToken);\n    } catch (e) {}\n};\n\nexport const clearAuthToken = () => {\n    try {\n        localStorage.removeItem('authToken');\n    } catch (e) {}\n};\n","import { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\n\n\nexport const SET_ANSWER = 'SET_ANSWER';\nexport const setAnswer = userInput => ({\n  type: SET_ANSWER,\n  userInput\n});\n\nexport const STAGE_NEW_SUBJECT = 'STAGE_NEW_SUBJECT';\nexport const stageNewSubject = (subjectId) => ({\n  type: STAGE_NEW_SUBJECT,\n  subjectId\n})\n\nexport const SET_CURRENT_SUBJECT = 'SET_CURRENT_SUBJECT';\nexport const setCurrentSubject = (subject) => ({\n  type: SET_CURRENT_SUBJECT,\n  subject\n})\n\nexport const GET_AVAILABLE_SUBJECTS_SUCCESS = 'GET_AVAILABLE_SUBJECTS_SUCCESS';\nexport const getAvailableSubjectsSuccess = subjects => ({\n  type: GET_AVAILABLE_SUBJECTS_SUCCESS,\n  subjects\n})\n\nexport const GET_QUESTION_SUCCESS = 'GET_QUESTION_SUCCESS';\nexport const getQuestionSuccess = question => ({\n  type: GET_QUESTION_SUCCESS,\n  question\n})\n\nexport const RESET_ANSWER_STATUS = 'RESET_ANSWER_STATUS';\nexport const resetAnswerStatus = () => ({\n  type: RESET_ANSWER_STATUS\n});\n\nexport const REVEAL_ANSWER = 'REVEAL_ANSWER';\nexport const revealAnswer = correctAnswer => ({\n  type: REVEAL_ANSWER,\n  correctAnswer\n})\n\nexport const HANDLE_STREAK_CORRECT = 'HANDLE_STREAK_CORRECT';\nexport const handleStreakCorrect = () => ({\n  type: HANDLE_STREAK_CORRECT,\n})\n\nexport const HANDLE_STREAK_INCORRECT = 'HANDLE_STREAK_INCORRECT';\nexport const handleStreakIncorrext = () => ({\n  type: HANDLE_STREAK_INCORRECT,\n})\n\nexport const GET_SCORES_SUCCESS = 'GET_SCORES_SUCCESS';\nexport const getScoresSuccess = (scores) => ({\n  type: GET_SCORES_SUCCESS,\n  scores\n})\n\nexport const UPDATE_USER_SUBJECTS_SUCCESS = 'UPDATE_USER_SUBJECTS_SUCCESS';\nexport const updateUserSubjectsSuccess = (userSubjects) => ({\n  type: UPDATE_USER_SUBJECTS_SUCCESS,\n  userSubjects\n})\n\nexport const EVALUATE_ANSWER_REQUEST = 'EVALUATE_ANSWER_REQUEST'\nexport const evaluateAnswerRequest = () => ({\n  type: EVALUATE_ANSWER_REQUEST\n})\n\nexport const EVALUATE_ANSWER_ERROR = 'EVALUATE_ANSWER_ERROR'\nexport const evaluateAnswerError = (error) => ({\n  type: EVALUATE_ANSWER_ERROR,\n  error\n})\nexport const GET_AVAILABLE_SUBJECTS_REQUEST = 'GET_AVAILABLE_SUBJECTS_REQUEST';\nexport const getAvailableSubjectsRequest = () => ({\n  type: GET_AVAILABLE_SUBJECTS_REQUEST\n})\nexport const GET_AVAILABLE_SUBJECTS_ERROR = 'GET_AVAILABLE_SUBJECTS_ERROR';\nexport const getAvailableSubjectsError = (error) => ({\n  type: GET_AVAILABLE_SUBJECTS_ERROR,\n  error\n})\nexport const GET_QUESTION_REQUEST = 'GET_QUESTION_REQUEST';\nexport const getQuestionRequest = () => ({\n  type: GET_QUESTION_REQUEST\n})\nexport const GET_QUESTION_ERROR = 'GET_QUESTION_ERROR';\nexport const getQuestionError = (error) => ({\n  type: GET_QUESTION_ERROR,\n  error\n})\nexport const NEXT_QUESTION_REQUEST = 'NEXT_QUESTION_REQUEST';\nexport const nextQuestionRequest = () => ({\n  type: NEXT_QUESTION_REQUEST\n})\nexport const NEXT_QUESTION_ERROR = 'NEXT_QUESTION_ERROR';\nexport const nextQuestionError = (error) => ({\n  type: NEXT_QUESTION_ERROR,\n  error\n})\nexport const GET_SCORES_REQUEST = 'GET_SCORES_REQUEST';\nexport const getScoresRequest = () => ({\n  type: GET_SCORES_REQUEST\n})\nexport const GET_SCORES_ERROR = 'GET_SCORES_ERROR';\nexport const getScoresError = (error) => ({\n  type: GET_SCORES_ERROR,\n  error\n})\nexport const UPDATE_USER_SUBJECTS_REQUEST = 'UPDATE_USER_SUBJECTS_REQUEST'\nexport const updateUserSubjectsRequest = () => ({\n  type: UPDATE_USER_SUBJECTS_REQUEST\n})\nexport const UPDATE_USER_SUBJECTS_ERROR = 'UPDATE_USER_SUBJECTS_ERROR'\nexport const updateUserSubjectsError = (error) => ({\n  type: UPDATE_USER_SUBJECTS_ERROR,\n  error\n})\nexport const NEW_SUBJECT_LIST_REQUEST = 'NEW_SUBJECT_LIST_REQUEST'\nexport const newSubjectListRequest = () => ({\n  type: NEW_SUBJECT_LIST_REQUEST\n})\nexport const NEW_SUBJECT_LIST_ERROR = 'NEW_SUBJECT_LIST_ERROR'\nexport const newSubjectListError = (error) => ({\n  type: NEW_SUBJECT_LIST_ERROR,\n  error\n})\n\nexport const GET_USER_SUBJECTS_SUCCESS = 'GET_USER_SUBJECTS_SUCCESS';\nexport const getUserSubjectsSuccess = (userSubjects) => ({\n  type: GET_USER_SUBJECTS_SUCCESS,\n  userSubjects\n})\n\nexport const GET_USER_SUBJECTS_REQUEST = 'GET_USER_SUBJECTS_REQUEST'\nexport const getUserSubjectsRequest = () => ({\n  type: GET_USER_SUBJECTS_REQUEST\n})\nexport const GET_USER_SUBJECTS_ERROR = 'GET_USER_SUBJECTS_ERROR'\nexport const getUserSubjectsError = (error) => ({\n  type: GET_USER_SUBJECTS_ERROR,\n  error\n})\n\n\nexport const EVALUATE_ANSWER = 'EVALUATE_ANSWER';\nexport const evaluateAnswer = (userAnswerObject) => (dispatch, getState) => {\n  dispatch(evaluateAnswerRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/learn`, {\n    method: 'POST',\n    body: JSON.stringify(userAnswerObject),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${authToken}`\n    }\n  }).then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(correctAnswer => {\n      if (correctAnswer.correct) {\n        dispatch(handleStreakCorrect())\n      } else {\n        dispatch(handleStreakIncorrext())\n      }\n      return dispatch(revealAnswer(correctAnswer))\n    }).catch(error => {\n      return dispatch(evaluateAnswerError(error))\n    })\n}\n\nexport const getAvailableSubjects = () => (dispatch, getState) => {\n  dispatch(evaluateAnswerRequest())\n  // const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/subjects`, {\n    // headers: {\n    //   Authorization: `Bearer ${authToken}`\n    // }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(subjects => {\n      dispatch(getAvailableSubjectsSuccess(subjects));\n    })\n    .catch(error => dispatch(evaluateAnswerError(error)))\n}\n\nexport const getQuestion = (subjectId) => (dispatch, getState) => {\n  dispatch(getQuestionRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/learn/${subjectId}`, {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(question => {\n      dispatch(getQuestionSuccess(question));\n    })\n    .catch(error => dispatch(getQuestionError(error)))\n}\n\nexport const nextQuestion = (foreignLanguage, correct) => (dispatch, getState) => {\n  dispatch(nextQuestionRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/learn`, {\n    method: 'POST',\n    body: JSON.stringify({ foreignLanguage: foreignLanguage, correct: correct }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(() => dispatch(getQuestion()))\n    .catch(error => dispatch(nextQuestionError(error)))\n}\n\n\n\nexport const getScores = (subjectId) => (dispatch, getState) => {\n  dispatch(getScoresRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/score/${subjectId}`, {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(scores => {\n      dispatch(getScoresSuccess(scores));\n    })\n    .catch(error => dispatch(getScoresError(error)))\n};\n\nexport const updateUserSubjects = () => (dispatch, getState) => {\n  dispatch(updateUserSubjectsRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/subjects/userSubjects`, {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then((userSubjects) => {\n      return dispatch(updateUserSubjectsSuccess(userSubjects));\n    }).catch((error) => dispatch(updateUserSubjectsError(error)))\n};\n\n\n// TODO, request most recently modified list instead of first in subjects array.\n// current subject set in auth action success\nexport const getUserSubjects = () => (dispatch, getState) => {\n  dispatch(getUserSubjectsRequest())\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/subjects/userSubjects`, {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then((userSubjects) => {\n      dispatch(getUserSubjectsSuccess(userSubjects));\n      dispatch(setCurrentSubject(userSubjects[0]))\n      return dispatch(getQuestion(userSubjects[0].id))\n    }).catch((error) => dispatch(getUserSubjectsError(error)))\n};\n\n\nexport const newSubjectList = (availableSubject) => (dispatch, getState) => {\n  dispatch(newSubjectListRequest())\n  let subjectId = availableSubject.id\n\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/subjects/${subjectId}`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(() => {\n      dispatch(updateUserSubjects());\n      dispatch(setCurrentSubject(availableSubject))\n      return dispatch(getQuestion(subjectId));\n    }).catch((error) => dispatch(newSubjectListError(error)))\n};\n\n","import jwtDecode from 'jwt-decode';\nimport { SubmissionError } from 'redux-form';\n\nimport { API_BASE_URL } from '../config';\n\nimport { normalizeResponseErrors } from './utils';\nimport { saveAuthToken, clearAuthToken } from '../local-storage';\nimport {  updateUserSubjectsSuccess } from './index'\n\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport const setAuthToken = authToken => ({\n  type: SET_AUTH_TOKEN,\n  authToken\n});\n\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\nexport const clearAuth = () => ({\n  type: CLEAR_AUTH\n});\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const authRequest = () => ({\n  type: AUTH_REQUEST\n});\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const authSuccess = currentUser => ({\n  type: AUTH_SUCCESS,\n  currentUser\n});\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const authError = error => ({\n  type: AUTH_ERROR,\n  error\n});\n\n\n\n// Stores the auth token in state and localStorage, and decodes and stores\n// the user data stored in the token\nconst storeAuthInfo = (authToken, dispatch) => {\n  const decodedToken = jwtDecode(authToken);\n  dispatch(setAuthToken(authToken));\n  dispatch(authSuccess(decodedToken.user));\n  saveAuthToken(authToken);\n  return decodedToken;\n};\n\nexport const login = (username, password) => dispatch => {\n  dispatch(authRequest());\n  return (\n    fetch(`${API_BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n      // Reject any requests which don't return a 200 status, creating\n      // errors which follow a consistent format\n      .then(res => normalizeResponseErrors(res))\n      .then(res => res.json())\n      .then(({ authToken }) => {\n       return storeAuthInfo(authToken, dispatch)\n      })\n      .catch(err => {\n        const { code } = err;\n        const message =\n          code === 401\n            ? 'Incorrect username or password'\n            : 'Unable to login, please try again';\n        dispatch(authError(err));\n        // Could not authenticate, so return a SubmissionError for Redux\n        // Form\n        return Promise.reject(\n          new SubmissionError({\n            _error: message\n          })\n        );\n      })\n  );\n};\n\nexport const refreshAuthToken = () => (dispatch, getState) => {\n  dispatch(authRequest());\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/refresh`, {\n    method: 'POST',\n    headers: {\n      // Provide our existing token as credentials to get a new one\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(({ authToken }) => storeAuthInfo(authToken, dispatch))\n    .catch(err => {\n      // We couldn't get a refresh token because our current credentials\n      // are invalid or expired, or something else went wrong, so clear\n      // them and sign us out\n      dispatch(authError(err));\n      dispatch(clearAuth());\n      clearAuthToken(authToken);\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n\tsetAnswer,\n\tevaluateAnswer,\n\tresetAnswerStatus,\n\tgetQuestion\n} from '../actions/index'\n\nexport class Card extends React.Component {\n\n\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(resetAnswerStatus())\n\t}\n\n\tbuildAndDispatchEvalObject = (userAnswer) => {\n\t\tconst wordWithAnswer = Object.assign({}, this.props.word, {\n\t\t\tuserAnswer,\n\t\t\tsubjectId: this.props.currentSubject.id\n\t\t})\n\t\tthis.props.dispatch(evaluateAnswer(wordWithAnswer))\n\t}\n\n\thandleChange = (value) => {\n\t\tthis.props.dispatch(setAnswer(value))\n\t}\n\n\thandleClick = (e) => {\n\t\te.preventDefault()\n\t\t//TODO change answer to userAnswer\n\t\tthis.buildAndDispatchEvalObject(this.props.answer)\n\t}\n\n\thandleNext = () => {\n\t\tthis.props.dispatch(resetAnswerStatus());\n\t\tthis.props.dispatch(getQuestion(this.props.currentSubject.id));\n\t}\n\n\n\n\trender() {\n\t\tlet feedback;\n\t\tif (this.props.correctAnswer) {\n\t\t\tif (this.props.correctAnswer.correct === true) {\n\t\t\t\tfeedback = 'You got it Right!'\n\t\t\t} else if (this.props.correctAnswer.correct === false) {\n\t\t\t\tfeedback = `Wrong! The answer is ${this.props.correctAnswer.nativeLanguage}`\n\t\t\t};\n\t\t}\n\t\tlet submitButton;\n\t\tlet nextButton;\n\t\tlet disabled;\n\t\tif (this.props.correctAnswer) {\n\t\t\tnextButton = <button type='button' onClick={() => this.handleNext()}>Get Another!</button>\n\t\t\tdisabled = true\n\t\t}\n\t\telse {\n\t\t\tsubmitButton = <button\n\t\t\t\tclassName='submit-button'\n\t\t\t\ttype=\"submit\"\n\t\t\t>\n\t\t\t\tSubmit Guess\n</button>\n\t\t\tdisabled = false\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className='game-container'>\n\t\t\t\t\t<h2>{this.props.word.foreignLanguage}</h2>\n\t\t\t\t\t<div className=\"line\" style={{ backgroundColor: this.props.bgc }}></div>\n\t\t\t\t\t<p className='card-text'></p>\n\t\t\t\t\t<form onSubmit={(e) => this.handleClick(e)}>\n\t\t\t\t\t\t<input className='user-input'\n\t\t\t\t\t\t\tname='text'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={this.props.answer}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\tplaceholder='answer'\n\t\t\t\t\t\t\tonChange={e => this.handleChange(e.target.value)}>\n\t\t\t\t\t\t</input>\n\t\t\t\t\t\t{submitButton}\n\t\t\t\t\t</form>\n\t\t\t\t\t{nextButton}\n\t\t\t\t\t<p>{feedback}</p>\n\t\t\t\t</div>\n\t\t\t\t<p className='word-score'>Word Score: {this.props.word.mValue}</p>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\tanswer: state.main.answer,\n\tstreak: state.main.streak,\n\tfeedback: state.main.feedback,\n\tword: state.main.currentWord,\n\tcorrectAnswer: state.main.correctAnswer,\n\tsubjects: state.auth.currentUser.subjects,\n\tcurrentSubject: state.main.currentSubject\n});\n\nexport default connect(mapStateToProps)(Card);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  setCurrentSubject,\n  newSubjectList,\n  getQuestion,\n  stageNewSubject\n} from '../actions/index'\n\nexport class LanguageSelector extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(stageNewSubject(this.props.currentSubject.id))\n  }\n  stageSubject(subjectId) {\n    this.props.dispatch(stageNewSubject(subjectId))\n  }\n\n  setCurrentSubject() {\n    const subjectId = this.props.stagedSubject;\n    // check if user already has a list on this subject\n    const subjectOnUser = this.props.userSubjects.find(subject => {\n      return subject.id === subjectId;\n    })\n    if (!subjectOnUser) {\n      const availableSubject = this.props.availableSubjects.find(subject => {\n        return subject.id === subjectId;\n      })\n      //create new list for user\n      this.props.dispatch(newSubjectList(availableSubject))\n    } else {\n      // set the current subject\n      this.props.dispatch(setCurrentSubject(subjectOnUser))\n      this.props.dispatch(getQuestion(subjectId))\n    }\n  }\n\n  render() {\n    let options;\n    if (this.props.loading) {\n      options =\n        <option>\n          'loading'\n      </option>\n\n    }\n    else {\n      options = this.props.availableSubjects.map((subject, index) =>\n        <option\n          key={index}\n          label={subject.subject}\n          value={subject.id}>\n          {subject.subject}\n        </option>);\n    }\n    return (\n      <div>\n        <label className='select-label'>Select a subject to learn</label>\n        <select className=\"select-subject\"\n          name=\"subjectSelect\"\n          value={this.props.stagedSubject}\n          options={options}\n          onChange={e => this.stageSubject(e.target.value)}>{options}\n        </select>\n        <button className='select-button' type='button' onClick={() => this.setCurrentSubject()}>Switch Subject</button>\n      </div>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = state => ({\n  loading: state.main.loading,\n  availableSubjects: state.main.availableSubjects,\n  currentSubject: state.main.currentSubject,\n  currentUser: state.auth.currentUser,\n  userSubjects: state.main.userSubjects,\n  stagedSubject: state.main.stagedSubject\n});\n\nexport default connect(mapStateToProps)(LanguageSelector);","import React from 'react';\nimport { connect } from 'react-redux';\nimport requiresLogin from './requires-login';\nimport { clearAuth } from '../actions/auth';\nimport { clearAuthToken } from '../local-storage';\nimport Card from './wordCard';\nimport LanguageSelector from './languageSelector';\nimport { Link } from 'react-router-dom';\nimport { getQuestion, getAvailableSubjects, setCurrentSubject, getUserSubjects } from '../actions/index'\n\nexport class Dashboard extends React.Component {\n\n\n  componentDidMount() {\n    this.props.dispatch(getAvailableSubjects())\n    if (!this.props.userSubjects.length) {\n      return this.props.dispatch(getUserSubjects())\n    }\n  }\n\n  logOut() {\n    this.props.dispatch(clearAuth());\n    clearAuthToken();\n  }\n  render() {\n\n    let logOutButton;\n    if (this.props.loggedIn) {\n      logOutButton = (\n        <button type='button' onClick={() => this.logOut()}>Log out</button>\n      );\n    }\n    let subjectSelector;\n    if (this.props.currentSubject && this.props.availableSubjects) {\n      subjectSelector = <LanguageSelector />\n    }\n\n    let information;\n    if (this.props.error) {\n      information = <div>\n        <h3>{this.props.error.message}</h3>\n      </div>\n    }\n    else{\n      information = <h3>Streak : {this.props.streak}</h3>\n  \n    }\n    return (\n      <div className='dashboard'>\n        <div className=\"dashboard-username-main\">\n          <h2 className='dashboard-welcome'>Welcome {this.props.currentUser.username}!</h2>\n         {information}\n        </div>\n        <Card bgc='#fcd000' />\n        {logOutButton}\n        <Link to='/scores'>\n          <button type='button'>View Scores</button>\n        </Link>\n        {subjectSelector}\n      </div>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.auth;\n  return {\n    error: state.main.error,\n    loading: state.main.loading,\n    streak: state.main.streak,\n    currentUser: state.auth.currentUser,\n    name: `${currentUser.fullname}`,\n    loggedIn: state.auth.currentUser !== null,\n    currentSubject: state.main.currentSubject,\n    availableSubjects: state.main.availableSubjects,\n    userSubjects: state.main.userSubjects\n  };\n};\n\nexport default requiresLogin()(connect(mapStateToProps)(Dashboard));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nexport default () => Component => {\n    function RequiresLogin(props) {\n        const { authenticating, loggedIn, error, ...passThroughProps } = props;\n        if (authenticating) {\n            return <div>Logging in...</div>;\n        } else if (!loggedIn || error) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return <Component {...passThroughProps} />;\n    }\n\n    const displayName = Component.displayName || Component.name || 'Component';\n    RequiresLogin.displayName = `RequiresLogin(${displayName})`;\n\n    const mapStateToProps = (state, props) => ({\n        authenticating: state.auth.loading,\n        loggedIn: state.auth.currentUser !== null,\n        error: state.auth.error\n    });\n\n    return connect(mapStateToProps)(RequiresLogin);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clearAuth } from '../actions/auth';\nimport { clearAuthToken } from '../local-storage';\n\nexport class HeaderBar extends React.Component {\n  logOut() {\n    this.props.dispatch(clearAuth());\n    clearAuthToken();\n  }\n\n  render() {\n    if (!this.props.loggedIn) {\n      return (<header role='banner' className=\"header-bar\">\n        <h1 className='title'>Friday Night Knowledge</h1>\n      </header>\n      );\n    }\n    if (this.props.currentSubject) {\n\n      if (this.props.currentSubject.subject === 'german') {\n        return (\n          <header role='banner' className=\"header-bar\">\n            <h1 className='german-title'>German for Friday Night</h1>\n          </header>\n        );\n      }\n\n      if (this.props.currentSubject.subject === 'czech') {\n        return (\n          <header role='banner' className=\"header-bar\">\n            <h1 className='czech-title'>Czech for Friday Night</h1>\n          </header>\n        );\n      }\n      else {\n        return (\n          <header role='banner' className=\"header-bar\">\n            <h1 className='title'>{this.props.currentSubject.subject} for Friday Night</h1>\n          </header>\n        );\n      }\n    }\n    else {\n      return <h1 className='title'>Loading</h1>\n    }\n\n  }\n\n\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.auth.currentUser !== null,\n  currentSubject: state.main.currentSubject,\n  loading: state.main.loading\n});\n\nexport default connect(mapStateToProps)(HeaderBar);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getScores } from '../actions/index'\nexport class ScorePage extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch(getScores(this.props.currentSubject.id))\n  }\n\n  render() {\n    let list = this.props.scores.map((score) => {\n      return <li className='score-item'>{score.foreignLanguage} <span>{score.mValue}</span> </li>\n    })\n\n    return (\n      <div className=\"dashboard scores\">\n        <div className=\"dashboard-username\">\n          <h2 className='dashboard-welcome'>\n            Welcome {this.props.username}!\n          </h2>\n          <h3>Word Score</h3>\n        </div>\n        <ul className='score-list'>{list}</ul>\n        <Link to='/dashboard'>\n          <button type='button'>Back to dashboard</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    main: state.main,\n    username: state.auth.currentUser.username,\n    scores: state.main.scores,\n    currentSubject: state.main.currentSubject\n  };\n};\n\nexport default connect(mapStateToProps)(ScorePage);","import React from 'react';\n\nexport default class Input extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.meta.active && this.props.meta.active) {\n            this.input.focus();\n        }\n    }\n\n    render() {\n        const Element = this.props.element || 'input';\n        let error;\n        if (this.props.meta.touched && this.props.meta.error) {\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\n        }\n\n        let warning;\n        if (this.props.meta.touched && this.props.meta.warning) {\n            warning = (\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\n            );\n        }\n\n        return (\n            <div className=\"form-input\">\n                <label htmlFor={this.props.input.name}>\n                    {this.props.label}\n                    {error}\n                    {warning}\n                </label>\n                <Element className=\"select-subject\"\n                    {...this.props.input}\n                    id={this.props.input.name}\n                    type={this.props.type}\n                    ref={input => (this.input = input)}\n                >\n                    {this.props.children}\n                </Element>\n\n            </div>\n        );\n    }\n}\n","export const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n    value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n    if (length.min && value.length < length.min) {\n        return `Must be at least ${length.min} characters long`;\n    }\n    if (length.max && value.length > length.max) {\n        return `Must be at most ${length.max} characters long`;\n    }\n};\nexport const matches = field => (value, allValues) =>\n    field in allValues && value.trim() === allValues[field].trim()\n        ? undefined\n        : 'Does not match';\n","import React from 'react';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport Input from './input';\nimport {login} from '../actions/auth';\nimport {required, nonEmpty} from '../validators';\n\nexport class LoginForm extends React.Component {\n    onSubmit(values) {\n        return this.props.dispatch(login(values.username, values.password));\n    }\n\n    render() {\n        let error;\n        if (this.props.error) {\n            error = (\n                <div className=\"form-error\" aria-live=\"polite\">\n                    {this.props.error}\n                </div>\n            );\n        }\n        return (\n            <form\n                className=\"login-form\"\n                onSubmit={this.props.handleSubmit(values =>\n                    this.onSubmit(values)\n                )}>\n                {error}\n                <label htmlFor=\"username\">Username</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    validate={[required, nonEmpty]}\n                />\n                <button disabled={this.props.pristine || this.props.submitting}>\n                    Log in\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'login',\n    onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\n})(LoginForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport LoginForm from './login-form';\n\n\nexport function LandingPage(props) {\n    // If we are logged in redirect straight to the user's dashboard\n    if (props.loggedIn) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n    return (\n        <div>\n            <div className=\"home\">\n                <p className='description'>Friday night knowledge will teach \n             teach you good words to know in multiple languages when you are at the bar.\n            </p>\n                <LoginForm />\n                <Link to=\"/register\">Register</Link>\n            </div>\n\n            {/* <div><TestDashboard /></div> */}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(LandingPage);\n","import React from 'react';\nimport { Field, reduxForm, focus } from 'redux-form';\nimport { registerUser } from '../actions/users';\nimport { login } from '../actions/auth';\nimport Input from './input';\nimport { connect } from 'react-redux'\nimport { required, nonEmpty, matches, length, isTrimmed } from '../validators';\nimport { getAvailableSubjects } from '../actions';\nconst passwordLength = length({ min: 10, max: 72 });\nconst matchesPassword = matches('password');\n\nexport class RegistrationForm extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch(getAvailableSubjects())\n  }\n\n\n  onSubmit(values) {\n\n    const { username, password, fullname, subjectId } = values;\n    const user = { username, password, fullname, subjectId };\n    return this.props\n      .dispatch(registerUser(user))\n      .then(() => this.props.dispatch(login(username, password)));\n  }\n\n  render() {\n    let options;\n    if (this.props.loading) {\n      options =\n        <option>\n          loading\n      </option>\n    }\n    if (this.props.availableSubjects.length) {\n      options = this.props.availableSubjects.map((subject, index) =>\n        <option\n          key={index}\n          label={subject.subject}\n          value={subject.id}>\n          {subject.subject}\n        </option>);\n      options.unshift(<option\n      >\n        pick one\n        </option>)\n     \n    }\n    return (\n      <form\n        className=\"login-form\"\n        onSubmit={this.props.handleSubmit(values =>\n          this.onSubmit(values)\n        )}>\n        <label htmlFor=\"fullname\">Full Name</label>\n        <Field component={Input} type=\"text\" name=\"fullname\" />\n        <label htmlFor=\"username\">Username</label>\n        <Field\n          component={Input}\n          type=\"text\"\n          name=\"username\"\n          validate={[required, nonEmpty, isTrimmed]}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"password\"\n          validate={[required, passwordLength, isTrimmed]}\n        />\n        <label htmlFor=\"passwordConfirm\">Confirm password</label>\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"passwordConfirm\"\n          validate={[required, nonEmpty, matchesPassword]}\n        />\n\n        <label className='select-label'>Select your first subject</label>\n        <Field\n          component={Input}\n          element='select'\n          className=\"select-subject\"\n          name=\"subjectId\"\n          type='select'\n          value={options}\n          options={options}\n          validate={[required]}\n        >{options}</Field>\n        < button\n          type=\"submit\"\n          disabled={this.props.pristine || this.props.submitting} >\n          Register\n                </button >\n      </form >\n    )\n  };\n};\n\nconst mapStateToProps = state => ({\n  loading: state.main.loading,\n  availableSubjects: state.main.availableSubjects\n});\n\n\nexport default connect(mapStateToProps)(reduxForm({\n  form: 'registration',\n  onSubmitFail: (errors, dispatch) =>\n    dispatch(focus('registration', Object.keys(errors)[0]))\n})(RegistrationForm));\n","import {SubmissionError} from 'redux-form';\n\nimport {API_BASE_URL} from '../config';\nimport {normalizeResponseErrors} from './utils';\n\nexport const registerUser = user => dispatch => {\n    console.log(user)\n    return fetch(`${API_BASE_URL}/users`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(user)\n        \n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .catch(err => {\n            const {reason, message, location} = err;\n            if (reason === 'ValidationError') {\n                // Convert ValidationErrors into SubmissionErrors for Redux Form\n                return Promise.reject(\n                    new SubmissionError({\n                        [location]: message\n                    })\n                );\n            }\n        });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport RegistrationForm from './registration-form';\n\nexport class RegistrationPage extends React.Component {\n    // If we are logged in (which happens automatically when registration\n    // is successful) redirect to the user's dashboard\n    render() {\n        if (this.props.loggedIn) {\n            return <Redirect to=\"/dashboard\" />;\n        }\n        return (\n            <div className=\"home\">\n                <h2>Get started today</h2>\n                <RegistrationForm />\n                <Link to=\"/\">Login</Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser !== null,\n    availableSubjects: state.main.availableSubjects,\n});\n\nexport default connect(mapStateToProps)(RegistrationPage);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Route, withRouter} from 'react-router-dom';\nimport Dashboard from './dashboard'\nimport HeaderBar from './header-bar';\nimport  ScorePage  from './scores';\nimport LandingPage from './landing-page';\nimport RegistrationPage from './registration-page';\nimport {refreshAuthToken} from '../actions/auth';\nimport './style.css'\n\nexport class App extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.loggedIn && this.props.loggedIn) {\n            // When we are logged in, refresh the auth token periodically\n            this.startPeriodicRefresh();\n        } else if (prevProps.loggedIn && !this.props.loggedIn) {\n            // Stop refreshing when we log out\n            this.stopPeriodicRefresh();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopPeriodicRefresh();\n    }\n\n    startPeriodicRefresh() {\n        this.refreshInterval = setInterval(\n            () => this.props.dispatch(refreshAuthToken()),\n            60 * 60 * 1000 // One hour\n        );\n    }\n\n    stopPeriodicRefresh() {\n        if (!this.refreshInterval) {\n            return;\n        }\n\n        clearInterval(this.refreshInterval);\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <HeaderBar />\n                <Route exact path=\"/\" component={LandingPage} />\n                <Route exact path=\"/dashboard\" component={Dashboard} />\n                <Route exact path=\"/register\" component={RegistrationPage} />\n                <Route exact path=\"/scores\" component={ScorePage} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    hasAuthToken: state.auth.authToken !== null,\n    loggedIn: state.auth.currentUser !== null\n});\n\n// Deal with update blocking - https://reacttraining.com/react-router/web/guides/dealing-with-update-blocking\nexport default withRouter(connect(mapStateToProps)(App));\n","import {\n    SET_AUTH_TOKEN,\n    CLEAR_AUTH,\n    AUTH_REQUEST,\n    AUTH_SUCCESS,\n    AUTH_ERROR\n} from '../actions/auth';\n\nconst initialState = {\n    authToken: null, // authToken !== null does not mean it has been validated\n    currentUser: null,\n    loading: false,\n    error: null\n};\n\nexport default function reducer(state = initialState, action) {\n    if (action.type === SET_AUTH_TOKEN) {\n        return Object.assign({}, state, {\n            authToken: action.authToken\n        });\n    } else if (action.type === CLEAR_AUTH) {\n        return Object.assign({}, state, {\n            authToken: null,\n            currentUser: null\n        });\n    } else if (action.type === AUTH_REQUEST) {\n        return Object.assign({}, state, {\n            loading: true,\n            error: null\n        });\n    } else if (action.type === AUTH_SUCCESS) {\n        return Object.assign({}, state, {\n            loading: false,\n            currentUser: action.currentUser\n        });\n    } else if (action.type === AUTH_ERROR) {\n        return Object.assign({}, state, {\n            loading: false,\n            error: action.error\n        });\n    }\n    return state;\n}\n","import {API_BASE_URL} from '../config';\nimport {normalizeResponseErrors} from './utils';\n\nexport const FETCH_PROTECTED_DATA_SUCCESS = 'FETCH_PROTECTED_DATA_SUCCESS';\nexport const fetchProtectedDataSuccess = data => ({\n    type: FETCH_PROTECTED_DATA_SUCCESS,\n    data\n});\n\nexport const FETCH_PROTECTED_DATA_ERROR = 'FETCH_PROTECTED_DATA_ERROR';\nexport const fetchProtectedDataError = error => ({\n    type: FETCH_PROTECTED_DATA_ERROR,\n    error\n});\n\nexport const fetchProtectedData = () => (dispatch, getState) => {\n    const authToken = getState().auth.authToken;\n    return fetch(`${API_BASE_URL}/protected`, {\n        method: 'GET',\n        headers: {\n            // Provide our auth token as credentials\n            Authorization: `Bearer ${authToken}`\n        }\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .then(({data}) => dispatch(fetchProtectedDataSuccess(data)))\n        .catch(err => {\n            dispatch(fetchProtectedDataError(err));\n        });\n};\n","import {\n    FETCH_PROTECTED_DATA_SUCCESS,\n    FETCH_PROTECTED_DATA_ERROR\n} from '../actions/protected-data';\n\nconst initialState = {\n    data: '',\n    error: null\n};\n\nexport default function reducer(state = initialState, action) {\n    if (action.type === FETCH_PROTECTED_DATA_SUCCESS) {\n        return Object.assign({}, state, {\n            data: action.data,\n            error: null\n        });\n    } else if (action.type === FETCH_PROTECTED_DATA_ERROR) {\n        return Object.assign({}, state, {\n            error: action.error\n        });\n    }\n    return state;\n}\n","import {\n  SET_ANSWER,\n  GET_QUESTION_SUCCESS,\n  RESET_ANSWER_STATUS,\n  HANDLE_STREAK_CORRECT,\n  HANDLE_STREAK_INCORRECT,\n  GET_SCORES_SUCCESS,\n  REVEAL_ANSWER,\n  SET_CURRENT_SUBJECT,\n  GET_AVAILABLE_SUBJECTS_SUCCESS,\n  UPDATE_USER_SUBJECTS_SUCCESS,\n  EVALUATE_ANSWER_REQUEST,\n  EVALUATE_ANSWER_ERROR,\n  GET_AVAILABLE_SUBJECTS_REQUEST,\n  GET_AVAILABLE_SUBJECTS_ERROR,\n  GET_QUESTION_REQUEST,\n  GET_QUESTION_ERROR,\n  NEXT_QUESTION_REQUEST,\n  NEXT_QUESTION_ERROR,\n  GET_SCORES_REQUEST,\n  GET_SCORES_ERROR,\n  UPDATE_USER_SUBJECTS_REQUEST,\n  UPDATE_USER_SUBJECTS_ERROR,\n  NEW_SUBJECT_LIST_REQUEST,\n  NEW_SUBJECT_LIST_ERROR,\n  GET_USER_SUBJECTS_SUCCESS,\n  GET_USER_SUBJECTS_REQUEST,\n  GET_USER_SUBJECTS_ERROR,\n  STAGE_NEW_SUBJECT,\n} from '../actions/index.js'\n\n\n\n\nconst initialState = {\n  //TODO change answer to userAnswer\n\n  answer: '',\n  correctAnswer: null,\n  currentWord: 'null',\n  streak: 0,\n  scores: [],\n  availableSubjects: [],\n  userSubjects: [],\n  currentSubject: null,\n  loading: false,\n  error: null,\n  stagedSubject: null,\n}\n\n\nexport const mainReducer = (state = initialState, action) => {\n  if (action.type === SET_ANSWER) {\n    return Object.assign({}, state, {\n      answer: action.userInput\n    })\n  }\n  else if (action.type === GET_QUESTION_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      currentWord: action.question\n    })\n  }\n\n  else if (action.type === REVEAL_ANSWER) {\n    return Object.assign({}, state, {\n      correctAnswer: action.correctAnswer,\n      answer: ''\n    })\n  }\n\n  else if (action.type === RESET_ANSWER_STATUS) {\n    return Object.assign({}, state, {\n      correctAnswer: null\n    })\n  }\n\n  else if (action.type === HANDLE_STREAK_CORRECT) {\n    return Object.assign({}, state, {\n      streak: state.streak += 1,\n      loading: false\n    })\n  }\n\n  else if (action.type === HANDLE_STREAK_INCORRECT) {\n    return Object.assign({}, state, {\n      streak: 0,\n      loading: false\n    })\n  }\n\n  else if (action.type === GET_SCORES_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      scores: [...action.scores]\n    })\n  }\n\n  else if (action.type === SET_CURRENT_SUBJECT) {\n\n    return Object.assign({}, state, {\n      currentSubject: action.subject\n    })\n\n  }\n\n  else if (action.type === GET_AVAILABLE_SUBJECTS_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      availableSubjects: action.subjects\n    })\n  }\n\n  else if (action.type === UPDATE_USER_SUBJECTS_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      userSubjects: [...action.userSubjects]\n    })\n  }\n\n\n  else if (action.type === EVALUATE_ANSWER_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === EVALUATE_ANSWER_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === GET_AVAILABLE_SUBJECTS_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === GET_AVAILABLE_SUBJECTS_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === GET_QUESTION_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === GET_QUESTION_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === NEXT_QUESTION_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === NEXT_QUESTION_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === GET_SCORES_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === GET_SCORES_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === UPDATE_USER_SUBJECTS_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === UPDATE_USER_SUBJECTS_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === NEW_SUBJECT_LIST_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === NEW_SUBJECT_LIST_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === GET_USER_SUBJECTS_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      userSubjects: [...action.userSubjects]\n    })\n  }\n  else if (action.type === GET_USER_SUBJECTS_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    })\n  }\n  else if (action.type === GET_USER_SUBJECTS_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    })\n  }\n  else if (action.type === STAGE_NEW_SUBJECT) {\n    return Object.assign({}, state, {\n      stagedSubject: action.subjectId\n    })\n  }\n\n  return state\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport thunk from 'redux-thunk';\nimport { loadAuthToken } from './local-storage';\nimport authReducer from './reducers/auth';\nimport protectedDataReducer from './reducers/protected-data';\nimport { setAuthToken, refreshAuthToken } from './actions/auth';\nimport { mainReducer } from './reducers/mainReducer'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    combineReducers({\n        form: formReducer,\n        auth: authReducer,\n        protectedData: protectedDataReducer,\n        main: mainReducer\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n);\n\n// Hydrate the authToken from localStorage if it exist\nconst authToken = loadAuthToken();\nif (authToken) {\n    const token = authToken;\n    store.dispatch(setAuthToken(token));\n    store.dispatch(refreshAuthToken());\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './components/app';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}